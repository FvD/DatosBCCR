raw <- jsonlite::fromJSON(base)
series <- raw$CompactData$DataSet$Series
descriptores <- series[1:n]
for(i in 1:length(series$Obs)){
if(i == 1) {
datos <- series$Obs[[i]]
colnames(datos) <- c("Fecha", paste0(descriptores[i, ],
collapse = "."))
}
else {
datos <- cbind(datos, series$Obs[[i]][,2])
colnames(datos)[i + 1] <- c(paste0(descriptores[i, ],
collapse = "."))
}
}
datos[, -1] <- apply(datos[,-1], 2, as.numeric)
return(datos)
}
library(reshape2)
datos <- melt(datos, id.vars = "Fecha")
datos
library(ggplot2)
ggplot2(datos, aes( x = Fecha, y = Value)) + geom_line() + facet_wrap(.~variable)
ggplot(datos, aes( x = Fecha, y = Value)) + geom_line() + facet_wrap(.~variable)
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(.~variable)
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_grid(.~variable)
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_grid(.~variable)+scale_y_continues(scale = "free.y")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_grid(.~variable)+scale_y_continue(scale = "free.y")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_grid(.~variable)+ scale(scale_y = "free")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_grid(.~variable, scales ="free_y")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_grid(.~variable, scales ="free_y", ncol = 2)
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(~variable, scales ="free_y", ncol = 2)
datos <- DescargarDatosFMI("DOT", 2000, 2015, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
datos
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
InfoBD("DOT")
datos <- DescargarDatosFMI("DOT", 2000, 2015, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
datos
DescargarDatosFMI <- function(id.BD, inicio, fin, ...){
lista.pars <- list(...)
base <- "http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/" %>%
paste0(id.BD,"/")
n <- length(lista.pars)
for(i in 1:n){
base <- paste0(base, paste0(lista.pars[[i]], collapse ="+"), ".")
}
base <- paste0(base, "?startPeriod=", inicio, "&endPeriod=", fin)
message(paste("Extrayendo datos del URL:", base))
raw <- jsonlite::fromJSON(base)
series <- raw$CompactData$DataSet$Series
descriptores <- series[1:n]
for(i in 1:length(series$Obs)){
if(i == 1) {
datos <- series$Obs[[i]]
colnames(datos) <- c("Fecha", paste0(descriptores[i, ],
collapse = "."))
}
else {
datos <- cbind(datos, series$Obs[[i]][,2])
colnames(datos)[i + 1] <- c(paste0(descriptores[i, ],
collapse = "."))
}
}
print(datos)
datos[, -1] <- apply(datos[,-1], 2, as.numeric)
return(datos)
}
datos <- DescargarDatosFMI("DOT", 2000, 2015, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
InfoBD("DOT")
DescargarDatosFMI <- function(id.BD, inicio, fin, ...){
lista.pars <- list(...)
base <- "http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/" %>%
paste0(id.BD,"/")
n <- length(lista.pars)
for(i in 1:n){
base <- paste0(base, paste0(lista.pars[[i]], collapse ="+"), ".")
}
base <- paste0(base, "?startPeriod=", inicio, "&endPeriod=", fin)
message(paste("Extrayendo datos del URL:", base))
raw <- jsonlite::fromJSON(base)
series <- raw$CompactData$DataSet$Series
descriptores <- series[1:n]
for(i in 1:length(series$Obs)){
if(i == 1) {
datos <- series$Obs[[i]][,1:2]
colnames(datos) <- c("Fecha", paste0(descriptores[i, ],
collapse = "."))
}
else {
datos <- cbind(datos, series$Obs[[i]][,2])
colnames(datos)[i + 1] <- c(paste0(descriptores[i, ],
collapse = "."))
}
}
print(datos)
datos[, -1] <- apply(datos[,-1], 2, as.numeric)
return(datos)
}
datos
datos <- DescargarDatosFMI("DOT", 2000, 2015, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
datos <- DescargarDatosFMI("DOT", 2000, 2015, "Y",c("US","JP"),"TXG_FOB_USD",c("W00","CR"))
InfoBD("DOT")
datos <- DescargarDatosFMI("DOT", 2000, 2015, "A",c("US","JP"),"TXG_FOB_USD",c("W00","CR"))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
str(datos)
datos[,1] = as.numeric(datos[,1])
datos <- melt(datos, id.vars = "Fecha")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(~variable, scales ="free_y", ncol = 2)
datos <- DescargarDatosFMI("DOT", 2000, 2015, "A",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(~variable, scales ="free_y", ncol = 2)
datos[,1] = as.numeric(datos[,1])
datos <- melt(datos, id.vars = "Fecha")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(~variable, scales ="free_y", ncol = 2)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
datos <- melt(datos, id.vars = "Fecha")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(~variable, scales ="free_y", ncol = 2)
datos
datos[,1] = as.factor(datos[,1])
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(~variable, scales ="free_y", ncol = 2)
datos
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
datos[, 1] <- paste0(datos[,1], "-15")
datos[, 1] <- as.Date(datos[, 1], format = "%Y-%m-%d")
datos <- melt(datos, id.vars = "Fecha")
ggplot(datos, aes( x = Fecha, y = value)) + geom_line() + facet_wrap(~variable, scales ="free_y", ncol = 2)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "CN"))
datos
InfoBD("DOT")
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD","NL")
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
datos
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD", "NL")
DescargarDatosFMI <- function(id.BD, inicio, fin, ...){
lista.pars <- list(...)
base <- "http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/" %>%
paste0(id.BD,"/")
n <- length(lista.pars)
for(i in 1:n){
base <- paste0(base, paste0(lista.pars[[i]], collapse ="+"), ".")
}
base <- paste0(base, "?startPeriod=", inicio, "&endPeriod=", fin)
message(paste("Extrayendo datos del URL:", base))
raw <- jsonlite::fromJSON(base)
series <- raw$CompactData$DataSet$Series
descriptores <- series[1:n]
for(i in 1:length(series$Obs)){
if(i == 1) {
datos <- series$Obs[[i]][,1:2]
colnames(datos) <- c("Fecha", paste0(descriptores[i, ],
collapse = "."))
print(datos)
}
else {
datos <- cbind(datos, series$Obs[[i]][,2])
colnames(datos)[i + 1] <- c(paste0(descriptores[i, ],
collapse = "."))
}
}
datos[, -1] <- apply(datos[,-1], 2, as.numeric)
return(datos)
}
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD", "NL")
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD", c("NL"))
URL ="http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/DOT/M.CR.TXG_FOB_USD.NL.?startPeriod=2000&endPeriod=2016"
x <- fromJSON("url")
x <- fromJSON(url)
x$$CompactData$DataSet$Series
x$CompactData$DataSet$Series
x
x$CompactData$DataSet
names(x)
names(x$Structure)
url
x <- fromJSON(URL)
x <- fromJSON(URL)
library(jsonlite)
x <- fromJSON(URL)
x$CompactData$DataSet$Series
length(series$Obs)
length(x$CompactData$DataSet$Series$Obs)
length(x$CompactData$DataSet$Series$Obs[1])
length(x$CompactData$DataSet$Series$Obs[[1])
length(x$CompactData$DataSet$Series$Obs[[1]])
length(x$CompactData$DataSet$Series$Obs[[2]])
length(x$CompactData$DataSet$Series$Obs[[3]])
x$CompactData$DataSet$Series$Obs[[3]]
length(x$CompactData$DataSet$Series$Obs[[1]])
class(x$CompactData$DataSet$Series$Obs)
URL
URL <-"http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/DOT/M.CR+JP.TXG_FOB_USD.NL.?startPeriod=2000&endPeriod=2016"
y <- fromJSON(URL)
class(y$CompactData$DataSet$Series$Obs)
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
library(dplyr)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
datos
paste0(descriptores[i, ], collapse = "."))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD",c("W00","MX", "US", "NL"))
datos
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD", "NL")
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD", "NL")
c = c(1,2,3)
apply(c, 2,mean)
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
datos <- DescargarDatosFMI("DOT", 2000, 2016, "M",c("CR"),"TXG_FOB_USD", "NL")
datos
plot(datos)
plot(datos[,2], type = "l")
.Platform$OS.type
system("ipconfig", intern = TRUE)
ipmessage <- system("ipconfig", intern = TRUE)
validIP <- "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[.]){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"
any(grep(validIP, ipmessage[-grep("127.0.0.1", ipmessage)]))
}
any(grep(validIP, ipmessage[-grep("127.0.0.1", ipmessage)]))
validIP <- "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[.]){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|0)"
any(grep(validIP, ipmessage[-grep("127.0.0.1", ipmessage)]))
help("any")
cods <- read.csv("./data/country_codes.csv", stringsAsFactors = FALSE)
cods <- read.csv("./data/country_codes.csv", stringsAsFactors = FALSE, na.strings = "999")
cods
cods[, 2] <- gsup("AF","Africa",cods[, 2])
cods[, 2] <- gsub("AF","Africa",cods[, 2])
cods[, 2] <- gsub("AS","Asia",cods[, 2])
cods[, 2] <- gsub("SA|NA","Americas",cods[, 2])
cods[, 2] <- gsub("OC","Oceania",cods[, 2])
cods
cods[, 2] <- gsub("EU","Europe",cods[, 2])
data <- InfoBD("IFS")
source('~/Packages/DatosBCCR/R/IMF.R', echo=TRUE)
data <- InfoBD("IFS")
data <- InfoBD("IFS")
countries <- data$`Geographical Areas`
View(cods)
cods <- cbind(c("AD", "Europe"), cods)
cods <- cbind(cbind("AD", "Europe"), cods)
cods <- rbind("AD", "Europe", cods[, 3:4])
cods <- cods[, -1]
cods[1,] <- c("AD", "Europe")
cods[1,] <- cbind("AD", "Europe")
cods[1,] <- t(c("AD", "Europe"))
cods[1,2] <- "Europe"
cods <- cods[-1,]
cods
cods <- read.csv("./data/country_codes.csv", stringsAsFactors = FALSE, na.strings = "999")
cods <- read.csv("./data/country_codes.csv", stringsAsFactors = FALSE, na.strings = "999", row.names = c("Ind", "Continent"))
help(read.csc)
help(read.csv)
cods <- read.csv("./data/country_codes.csv", stringsAsFactors = FALSE, na.strings = "999", col.names = c("Ind", "Continent"))
cods <- read.csv("./data/country_codes.csv", stringsAsFactors = FALSE, na.strings = "999", col.names = c("Ind", "Continent"), header = FALSE)
countries
cods <- read.csv("./data/country_codes.csv", stringsAsFactors = FALSE, na.strings = "999", col.names = c("indicador", "continente"), header = FALSE)
names(data)
data <- InfoBD("DOTS")
data <- InfoBD("DOT")
data
names(data)
data$`Geographical Areas`
countries <- data$`Geographical Areas`
countries <- countries  %>% left_join(cods)
library(dplyr)
countries <- countries  %>% left_join(cods)
View(countries)
cods
countries[, 3] <- countries[ ,3]  %>%  gsub("EU", "Europe")
countries <- countries[ , 1:2]
cods[, 2] <- gsub("AF","Africa",cods[, 2])
cods[, 2] <- gsub("AS","Asia",cods[, 2])
cods[, 2] <- gsub("SA|NA","Americas",cods[, 2])
cods[, 2] <- gsub("OC","Oceania",cods[, 2])
cods[, 2] <- gsub("EU","Europe",cods[, 2])
countries <- countries  %>% left_join(cods)
save(countries, "./data/country_codes.RData")
save(countries, file = "./data/country_codes.RData")
DescargarDatosFMI("DOT", 2014,2014, )
americas <- countries[countries$continente == "Americas", 1]
americas
View(americas)
americas <- complete.cases(countries)
americas <-  countries[ complete.cases(countries),]
americas <- americas[countries$continente == "Americas", 1]
americas
americas <-  countries[ complete.cases(countries),]
americas <- americas[americas$continente == "Americas", 1]
data$Indicator
DescargarDatosFMI("DOT", 2014,2014, "M", americas, "TXG_FOB_USD", americas )
DescargarDatosFMI("DOT", 2014,2014, "A", americas, "TXG_FOB_USD", americas )
DescargarDatosFMI("DOT", 2014,2015, "A", americas, "TXG_FOB_USD", americas )
data$dimensiones_BD
data$Indicator
DescargarDatosFMI("DOT", 2014,2015, "M", americas, "TXG_FOB_USD", americas )
DescargarDatosFMI("DOT", 2014,2015, "M", "US", "TXG_FOB_USD", "CR" )
DescargarDatosFMI("DOT", 2014,2015, "M", "US", "TXG_FOB_USD", americas )
DescargarDatosFMI("DOT", 2014,2015, "M", "US", "TXG_FOB_USD", "CR" )
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
View(DescargarDatosBCCR(c(713,1)))
library(DatosBCCR)
View(DescargarDatosBCCR(c(713,1)))
View(DescargarDatosBCCR(c(717,1)))
View(DescargarDatosBCCR(c(317,1)))
library(dplyr)
View(DescargarDatosBCCR(c(317,1)))
library(DatosBCCR)
View(DescargarDatosBCCR(c(317,1)))
library(DatosBCCR)
View(DescargarDatosBCCR(c(317,1)))
DescargarDatosBCCR(c(317,1))
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
View(DescargarDatosBCCR(c(317,1)))
library(DatosBCCR)
View(DescargarDatosBCCR(c(317,1)))
library(DatosBCCR)
View(DescargarDatosBCCR(c(317,1)))
library(DatosBCCR)
View(DescargarDatosBCCR(c(317,1)))
View(DescargarDatosBCCR(c(317,318)))
datos <- DescargarDatosBCCR(c(317,318))
library(tidy3)
library(tidyr)
datos  <- datos %>% spread(Nombre, Valor)
View(datos)
datos <- DescargarDatosBCCR(c(317,318))
datos2  <- datos %>% spread(Nombre, Valor)
View(datos2)
datos2  <- datos %>% select(-Indicador, - Periodicidad) %>% spread(Nombre, Valor)
library(dplyr)
datos2  <- datos %>% select(-Indicador, - Periodicidad) %>% spread(Nombre, Valor)
datos2  <- datos %>% select(-Indicador, - Periodicidad) %>% spread(Nombre, Valor) %>% ggplot(aes(x = Fecha)) + geom_line(aes(y = Compra))+ geom_line(aes(y = Venta))
library(ggplot2)
datos2  <- datos %>% select(-Indicador, - Periodicidad) %>% spread(Nombre, Valor) %>% ggplot(aes(x = Fecha)) + geom_line(aes(y = Compra))+ geom_line(aes(y = Venta))
datos2
datos %>% select(-Indicador, - Periodicidad) %>% spread(Nombre, Valor) %>% ggplot(aes(x = Compra, y = Venta)) + geom_point()
airports %>% semi_join(flights, c("faa" = "dest")) %>% ggplot(aes(lon, lat)) + borders("state") + geom_point() + coord_quickmap()
x <- tribble
x <- tribble()
library(tibble)
x <- tibble()
y <- tibble("var" = c(1,2,3), "check" = c("a", "b", "c"))
y
inner_join(x, y)
x
class(x)
att(x)
cods
filter(cods, Indicador = "317")
filter(cods, Indicador == "317")
cods <- tibble(cods)
cods
tibble(cods)
as_tibble(cods)
cods <- as_tibble(cods)
saveRDS(cods, "./data/cods.RDS")
cods
attr(cods, "a") <- c(1,2)
attributes(cods)
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318))
final
temp
DescargarDatosBCCR <- function(indicador, inicio="11/02/1989", fin = "hoy",
subniveles = "N", nombre= "me"){
time <- Sys.time()
if(fin == "hoy") fin = strftime(Sys.time(),"%d/%m/%Y")
# Revisar validez de parámetros
if (!InputValid(indicador, inicio, fin, subniveles)){
stop("Imposible realizar solicitud con parámetros ingresados.")
}
final <- data.frame(Indicador = character(),
Fecha = as.Date(character()),
Value = numeric(),
stringsAsFactors=FALSE)
url <- paste("http://indicadoreseconomicos.bccr.fi.cr/",
"indicadoreseconomicos/WebServices/wsIndicadoresEconomicos.asmx",
sep = "")
baseSource <- paste(url,"/ObtenerIndicadoresEconomicosXML",
sep = "")
primero = TRUE
for(ind in indicador){
if(!as.character(ind) %in% cods$Indicador) next
serverResponse <- httr::status_code(httr::GET(url))
if(serverResponse == 200){
htmlRequest <- RCurl::getForm(baseSource,
tcIndicador = ind, tcFechaInicio = inicio,
tcFechaFinal = fin, tcNombre = nombre,
tnSubNiveles = subniveles)
}else stop("No se ha podido conectar al servidor.")
# Deshacerse del tag <string> que no permite usar xmlTreeParse
# y luege obtener datos
temp <- htmlRequest %>% XML::htmlParse(asText = TRUE) %>%
XML::xpathSApply("//string", XML::xmlValue) %>%
XML::xmlTreeParse() %>% XML::xmlRoot() %>%
XML::xmlSApply(function(x) XML::xmlSApply(x,
XML::xmlValue))
# Corregir series para las que el sistema retorna valores vacíos
# para determinadas fechas (v.gr. fines de semana)
if(class(temp) == "list"){
temp <- sapply(temp,
function(x) {if(is.na(x[3])) x <- c(x, "NA"); x})
}
metadata <- filter(cods, Indicador == ind)
#Formato de datos
temp <- t(temp)
rownames(temp) <- NULL
temp <- as.data.frame(temp, stringsAsFactors = FALSE)
colnames(temp) <- c("Indicador", "Fecha", metadata$Nombre)
#Elimina advertencia por generación de NA's
suppressWarnings(temp$Valor <- as.numeric(temp$Valor))
temp$Fecha <- as.Date(temp$Fecha, "%Y-%m-%d")
if(primero) final <- as_tibble(temp) %>% select(-Indicador)
else final <- final %>% inner_join(as_tibble(temp))
}
elapsed <- Sys.time() - time
message(paste0("Duración de descarga: ", format(elapsed, digits = 2),
".\nResultado: ", NROW(final)," observaciones."))
return(final)
}
debugSource('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
temp
debugSource('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
mtcars
mtcars[[cyl]]
mtcars[["cy"l]]
mtcars["cy"l]
mtcars["cyl"]
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
debugSource('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
colnames(temp)
temp[metadata$Nombre]
as.numeric(temp[metadata$Nombre])
as.numeric(temp[[metadata$Nombre]])
temp[[metadata$Nombre]]
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
datos
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
datos
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
temp
head(temp)
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
datos
datos <- DescargarDatosBCCR(c(317,318))
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318))
cods  <- readR("./cods.RDS")
cods  <- readRDS("./cods.RDS")
getwd()
cods  <- readRDS(".data//cods.RDS")
cods  <- readRDS(".data/cods.RDS")
cods  <- readRDS("./data/cods.RDS")
cods
save(cods, file = "./data/cods.RData")
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318))
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
View(cods)
datos <- DescargarDatosBCCR(c(317,318))
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318))
cods
cods  <- cods
debugSource('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
datos <- DescargarDatosBCCR(c(317,318))
library(magrittr)
datos <- DescargarDatosBCCR(c(317,318), inicio = "01/01/2010")
cods
filter(cods, Indicador == ind)
cods$Indicador
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318), inicio = "01/01/2010")
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318), inicio = "01/01/2010")
temp
datos <- DescargarDatosBCCR(c(317,318), inicio = "01/01/2010")
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318), inicio = "01/01/2010")
metadata
final
temp
library(DatosBCCR)
datos <- DescargarDatosBCCR(c(317,318), inicio = "01/01/2010")
x
y
by
source('~/Packages/DatosBCCR/R/BCCR.R', echo=TRUE)
